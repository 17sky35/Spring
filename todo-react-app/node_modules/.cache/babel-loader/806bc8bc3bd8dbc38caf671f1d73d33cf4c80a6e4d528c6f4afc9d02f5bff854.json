{"ast":null,"code":"var _jsxFileName = \"D:\\\\1.JYH\\\\3.WEP\\\\work\\\\react-workspace\\\\todo-react-app\\\\src\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ListItem, ListItemText, InputBase, Checkbox, ListItemSecondaryAction, IconButton } from \"@mui/material\";\nimport DeleteOutlined from \"@mui/icons-material/DeleteOutlined\";\n// useState\n// 리액트에서 사용되는 Hook중 하나로 함수형 컴포넌트에서 상태 변수를 사용할 수 있도록 해준다.\n// Hook을 사용하면 제공하는 기능과 상태변수를 사용할 수 있다.\n\n// 함수 생성 방법\n// 1.function 함수명(){\n\n// }\n// 2.let 함수명 = function(){   ->  let 함수명 = () => {}\n\n// }\n// 화살표 함수 규칙\n// 1. 매개변수가 1개면 소괄호 생략 가능\n// 2. 명령이 한 줄이면서 return이 있다면, 중괄호와 return 같이 생략 가능\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = props => {\n  _s();\n  const [item, setItem] = useState(props.item);\n  const deleteItem = props.deleteItem;\n  const [readOnly, setReadOnly] = useState(true);\n\n  // deletEventHandler 작성\n  const deletEventHandler = () => {\n    // 삭제하려고 하는 todo 전달\n    deleteItem(item);\n  };\n\n  // turnOffReadOnly 함수\n  // 내용쪽을 클릭했을 때 수정 가능한 상태로 만들기\n  const turnOffReadOnly = () => {\n    setReadOnly(false);\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: item.done\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        inputProps: {\n          \"aria-label\": \"naked\",\n          \"readOnly\": readOnly\n        },\n        onClick: turnOffReadOnly,\n        type: \"text\",\n        id: item.id,\n        name: item.id,\n        value: item.title,\n        multiline: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Delete Todo\",\n        onClick: deletEventHandler,\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"gX+eXC56e0NjrYZrTR0Au2i1I3Y=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","ListItem","ListItemText","InputBase","Checkbox","ListItemSecondaryAction","IconButton","DeleteOutlined","jsxDEV","_jsxDEV","Todo","props","_s","item","setItem","deleteItem","readOnly","setReadOnly","deletEventHandler","turnOffReadOnly","children","checked","done","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","onClick","type","id","name","value","title","multiline","fullWidth","_c","$RefreshReg$"],"sources":["D:/1.JYH/3.WEP/work/react-workspace/todo-react-app/src/Todo.js"],"sourcesContent":["import React,{useState} from \"react\"\r\nimport { ListItem, \r\n        ListItemText, \r\n        InputBase,\r\n        Checkbox,\r\n        ListItemSecondaryAction,\r\n        IconButton\r\n        } from \"@mui/material\";\r\nimport DeleteOutlined from \"@mui/icons-material/DeleteOutlined\"\r\n// useState\r\n// 리액트에서 사용되는 Hook중 하나로 함수형 컴포넌트에서 상태 변수를 사용할 수 있도록 해준다.\r\n// Hook을 사용하면 제공하는 기능과 상태변수를 사용할 수 있다.\r\n\r\n// 함수 생성 방법\r\n// 1.function 함수명(){\r\n\r\n// }\r\n// 2.let 함수명 = function(){   ->  let 함수명 = () => {}\r\n    \r\n// }\r\n// 화살표 함수 규칙\r\n// 1. 매개변수가 1개면 소괄호 생략 가능\r\n// 2. 명령이 한 줄이면서 return이 있다면, 중괄호와 return 같이 생략 가능\r\n\r\nconst Todo = (props) => {\r\n    const [item, setItem] = useState(props.item);    \r\n    const deleteItem = props.deleteItem;    \r\n    const [readOnly, setReadOnly] = useState(true);\r\n\r\n    // deletEventHandler 작성\r\n    const deletEventHandler = () => {\r\n        // 삭제하려고 하는 todo 전달\r\n        deleteItem(item);\r\n    }\r\n\r\n    // turnOffReadOnly 함수\r\n    // 내용쪽을 클릭했을 때 수정 가능한 상태로 만들기\r\n    const turnOffReadOnly = () => {\r\n        setReadOnly(false);\r\n    }\r\n\r\n\r\n    return(\r\n    <ListItem>\r\n        <Checkbox checked={item.done}/>\r\n        <ListItemText>\r\n            <InputBase \r\n            inputProps={{\"aria-label\" : \"naked\", \"readOnly\":readOnly}}\r\n            onClick={turnOffReadOnly}\r\n            type=\"text\"\r\n            id={item.id}\r\n            name={item.id}\r\n            value={item.title}\r\n            multiline={true}\r\n            fullWidth={true}\r\n            />\r\n        </ListItemText>\r\n        <ListItemSecondaryAction>\r\n            {/* 삭제 */}\r\n            <IconButton aria-label=\"Delete Todo\" onClick={deletEventHandler}>\r\n                <DeleteOutlined />\r\n            </IconButton>\r\n        </ListItemSecondaryAction>\r\n    </ListItem>\r\n    );\r\n}\r\nexport default Todo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,QAAQ,EACTC,YAAY,EACZC,SAAS,EACTC,QAAQ,EACRC,uBAAuB,EACvBC,UAAU,QACH,eAAe;AAC9B,OAAOC,cAAc,MAAM,oCAAoC;AAC/D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACW,KAAK,CAACE,IAAI,CAAC;EAC5C,MAAME,UAAU,GAAGJ,KAAK,CAACI,UAAU;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAH,UAAU,CAACF,IAAI,CAAC;EACpB,CAAC;;EAED;EACA;EACA,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC1BF,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EAGD,oBACAR,OAAA,CAACR,QAAQ;IAAAmB,QAAA,gBACLX,OAAA,CAACL,QAAQ;MAACiB,OAAO,EAAER,IAAI,CAACS;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/BjB,OAAA,CAACP,YAAY;MAAAkB,QAAA,eACTX,OAAA,CAACN,SAAS;QACVwB,UAAU,EAAE;UAAC,YAAY,EAAG,OAAO;UAAE,UAAU,EAACX;QAAQ,CAAE;QAC1DY,OAAO,EAAET,eAAgB;QACzBU,IAAI,EAAC,MAAM;QACXC,EAAE,EAAEjB,IAAI,CAACiB,EAAG;QACZC,IAAI,EAAElB,IAAI,CAACiB,EAAG;QACdE,KAAK,EAAEnB,IAAI,CAACoB,KAAM;QAClBC,SAAS,EAAE,IAAK;QAChBC,SAAS,EAAE;MAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACfjB,OAAA,CAACJ,uBAAuB;MAAAe,QAAA,eAEpBX,OAAA,CAACH,UAAU;QAAC,cAAW,aAAa;QAACsB,OAAO,EAAEV,iBAAkB;QAAAE,QAAA,eAC5DX,OAAA,CAACF,cAAc;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEf,CAAC;AAAAd,EAAA,CAzCKF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}