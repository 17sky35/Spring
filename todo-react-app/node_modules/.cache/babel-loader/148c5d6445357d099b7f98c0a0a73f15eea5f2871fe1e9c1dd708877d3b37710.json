{"ast":null,"code":"var _jsxFileName = \"D:\\\\1.JYH\\\\3.WEP\\\\work\\\\react-workspace\\\\todo-react-app\\\\src\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ListItem, ListItemText, InputBase, Checkbox, ListItemSecondaryAction, IconButton } from \"@mui/material\";\nimport DeleteOutlined from \"@mui/icons-material/DeleteOutlined\";\n// useState\n// 리액트에서 사용되는 Hook중 하나로 함수형 컴포넌트에서 상태 변수를 사용할 수 있도록 해준다.\n// Hook을 사용하면 제공하는 기능과 상태변수를 사용할 수 있다.\n\n// 함수 생성 방법\n// 1.function 함수명(){\n\n// }\n// 2.let 함수명 = function(){   ->  let 함수명 = () => {}\n\n// }\n// 화살표 함수 규칙\n// 1. 매개변수가 1개면 소괄호 생략 가능\n// 2. 명령이 한 줄이면서 return이 있다면, 중괄호와 return 같이 생략 가능\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = props => {\n  _s();\n  const [item, setItem] = useState(props.item);\n  const deleteItem = props.deleteItem;\n  const [readOnly, setReadOnly] = useState(true);\n  const editItem = props.editItem;\n  const editEventHandler = e => {\n    item.title = e.target.value; // 변경만 해서는 렌더링이 안된다.\n    editItem(); // 없으면 아예 수정이 안됨\n  };\n\n  // deletEventHandler 작성\n  const deletEventHandler = () => {\n    // 삭제하려고 하는 todo 전달\n    deleteItem(item);\n  };\n  // 체크박스변경\n  const checkboxEventHandler = e => {\n    item.done = e.target.checked;\n    editItem();\n  };\n\n  // turnOffReadOnly 함수\n  // 내용쪽을 클릭했을 때 수정 가능한 상태로 만들기\n  const turnOffReadOnly = () => {\n    setReadOnly(false);\n  };\n\n  // turnOnReadOnly 함수\n  const turnOnReadOnly = e => {\n    if (e.key === 'Enter') {\n      setReadOnly(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: item.done,\n      onChange: checkboxEventHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        inputProps: {\n          \"aria-label\": \"naked\",\n          \"readOnly\": readOnly\n        },\n        onClick: turnOffReadOnly,\n        onKeyDown: turnOnReadOnly,\n        onChange: editEventHandler,\n        type: \"text\",\n        id: item.id,\n        name: item.id,\n        value: item.title,\n        multiline: true,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Delete Todo\",\n        onClick: deletEventHandler,\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"gX+eXC56e0NjrYZrTR0Au2i1I3Y=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","ListItem","ListItemText","InputBase","Checkbox","ListItemSecondaryAction","IconButton","DeleteOutlined","jsxDEV","_jsxDEV","Todo","props","_s","item","setItem","deleteItem","readOnly","setReadOnly","editItem","editEventHandler","e","title","target","value","deletEventHandler","checkboxEventHandler","done","checked","turnOffReadOnly","turnOnReadOnly","key","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","onClick","onKeyDown","type","id","name","multiline","fullWidth","_c","$RefreshReg$"],"sources":["D:/1.JYH/3.WEP/work/react-workspace/todo-react-app/src/Todo.js"],"sourcesContent":["import React,{useState} from \"react\"\r\nimport { ListItem, \r\n        ListItemText, \r\n        InputBase,\r\n        Checkbox,\r\n        ListItemSecondaryAction,\r\n        IconButton\r\n        } from \"@mui/material\";\r\nimport DeleteOutlined from \"@mui/icons-material/DeleteOutlined\"\r\n// useState\r\n// 리액트에서 사용되는 Hook중 하나로 함수형 컴포넌트에서 상태 변수를 사용할 수 있도록 해준다.\r\n// Hook을 사용하면 제공하는 기능과 상태변수를 사용할 수 있다.\r\n\r\n// 함수 생성 방법\r\n// 1.function 함수명(){\r\n\r\n// }\r\n// 2.let 함수명 = function(){   ->  let 함수명 = () => {}\r\n    \r\n// }\r\n// 화살표 함수 규칙\r\n// 1. 매개변수가 1개면 소괄호 생략 가능\r\n// 2. 명령이 한 줄이면서 return이 있다면, 중괄호와 return 같이 생략 가능\r\n\r\nconst Todo = (props) => {\r\n    const [item, setItem] = useState(props.item);    \r\n    const deleteItem = props.deleteItem;    \r\n    const [readOnly, setReadOnly] = useState(true);\r\n    const editItem = props.editItem;\r\n\r\n    const editEventHandler = (e) => {\r\n        item.title = e.target.value; // 변경만 해서는 렌더링이 안된다.\r\n        editItem(); // 없으면 아예 수정이 안됨\r\n    }\r\n\r\n    // deletEventHandler 작성\r\n    const deletEventHandler = () => {\r\n        // 삭제하려고 하는 todo 전달\r\n        deleteItem(item);\r\n    }\r\n    // 체크박스변경\r\n    const checkboxEventHandler = (e) => {\r\n        item.done = e.target.checked;\r\n        editItem();\r\n    }\r\n\r\n    // turnOffReadOnly 함수\r\n    // 내용쪽을 클릭했을 때 수정 가능한 상태로 만들기\r\n    const turnOffReadOnly = () => {\r\n        setReadOnly(false);\r\n    }\r\n\r\n    // turnOnReadOnly 함수\r\n    const turnOnReadOnly = (e) => {\r\n        if(e.key === 'Enter'){\r\n            setReadOnly(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <ListItem>\r\n        <Checkbox checked={item.done} onChange={checkboxEventHandler}/>\r\n        <ListItemText>\r\n            <InputBase \r\n            inputProps={{\"aria-label\" : \"naked\", \"readOnly\":readOnly}}\r\n            onClick={turnOffReadOnly}\r\n            onKeyDown={turnOnReadOnly}\r\n            onChange={editEventHandler}\r\n            type=\"text\"\r\n            id={item.id}\r\n            name={item.id}\r\n            value={item.title}\r\n            multiline={true}\r\n            fullWidth={true}\r\n            />\r\n        </ListItemText>\r\n        <ListItemSecondaryAction>\r\n            {/* 삭제 */}\r\n            <IconButton aria-label=\"Delete Todo\" onClick={deletEventHandler}>\r\n                <DeleteOutlined />\r\n            </IconButton>\r\n        </ListItemSecondaryAction>\r\n    </ListItem>\r\n    );\r\n}\r\nexport default Todo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,QAAQ,EACTC,YAAY,EACZC,SAAS,EACTC,QAAQ,EACRC,uBAAuB,EACvBC,UAAU,QACH,eAAe;AAC9B,OAAOC,cAAc,MAAM,oCAAoC;AAC/D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACW,KAAK,CAACE,IAAI,CAAC;EAC5C,MAAME,UAAU,GAAGJ,KAAK,CAACI,UAAU;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMkB,QAAQ,GAAGP,KAAK,CAACO,QAAQ;EAE/B,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5BP,IAAI,CAACQ,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;IAC7BL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;;EAED;EACA,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAT,UAAU,CAACF,IAAI,CAAC;EACpB,CAAC;EACD;EACA,MAAMY,oBAAoB,GAAIL,CAAC,IAAK;IAChCP,IAAI,CAACa,IAAI,GAAGN,CAAC,CAACE,MAAM,CAACK,OAAO;IAC5BT,QAAQ,CAAC,CAAC;EACd,CAAC;;EAED;EACA;EACA,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC1BX,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMY,cAAc,GAAIT,CAAC,IAAK;IAC1B,IAAGA,CAAC,CAACU,GAAG,KAAK,OAAO,EAAC;MACjBb,WAAW,CAAC,IAAI,CAAC;IACrB;EACJ,CAAC;EAED,oBACAR,OAAA,CAACR,QAAQ;IAAA8B,QAAA,gBACLtB,OAAA,CAACL,QAAQ;MAACuB,OAAO,EAAEd,IAAI,CAACa,IAAK;MAACM,QAAQ,EAAEP;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/D3B,OAAA,CAACP,YAAY;MAAA6B,QAAA,eACTtB,OAAA,CAACN,SAAS;QACVkC,UAAU,EAAE;UAAC,YAAY,EAAG,OAAO;UAAE,UAAU,EAACrB;QAAQ,CAAE;QAC1DsB,OAAO,EAAEV,eAAgB;QACzBW,SAAS,EAAEV,cAAe;QAC1BG,QAAQ,EAAEb,gBAAiB;QAC3BqB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAE5B,IAAI,CAAC4B,EAAG;QACZC,IAAI,EAAE7B,IAAI,CAAC4B,EAAG;QACdlB,KAAK,EAAEV,IAAI,CAACQ,KAAM;QAClBsB,SAAS,EAAE,IAAK;QAChBC,SAAS,EAAE;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACf3B,OAAA,CAACJ,uBAAuB;MAAA0B,QAAA,eAEpBtB,OAAA,CAACH,UAAU;QAAC,cAAW,aAAa;QAACgC,OAAO,EAAEd,iBAAkB;QAAAO,QAAA,eAC5DtB,OAAA,CAACF,cAAc;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEf,CAAC;AAAAxB,EAAA,CA5DKF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA6DV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}